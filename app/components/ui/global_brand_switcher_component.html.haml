.relative.group
  - if show_create_brand_cta?
    = link_to brand_path, class: "flex items-center gap-3 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 rounded-lg transition-colors" do
      .w-8.h-8.rounded-lg.bg-gradient-to-r.from-blue-500.to-purple-600.flex.items-center.justify-center
        %svg.w-4.h-4.text-white{fill: "none", stroke: "currentColor", "stroke-width": "2", viewbox: "0 0 24 24"}
          %path{d: "M12 6v6m0 0v6m0-6h6m-6 0H6"}
      .text-left
        .font-medium= t('brands.create_your_first_brand')
        .text-xs.text-gray-500= t('brands.get_started_with_brand')
  - else
    %button.flex.items-center.gap-3.px-4.py-2.text-sm.font-medium.text-gray-700.hover:bg-gray-100.rounded-lg.transition-colors.w-full.text-left{type: "button", data: { "brand-switcher-trigger": true }}
      - if current_brand
        .w-8.h-8.rounded-lg.bg-gradient-to-r.from-blue-500.to-purple-600.flex.items-center.justify-center
          %span.text-white.text-sm.font-bold= current_brand.name.first.upcase
        .flex-1
          .font-medium= current_brand_name
          .text-xs.text-gray-500= t('brands.current_brand')
      - else
        .w-8.h-8.rounded-lg.bg-gray-300.flex.items-center.justify-center
          %svg.w-4.h-4.text-gray-600{fill: "none", stroke: "currentColor", "stroke-width": "2", viewbox: "0 0 24 24"}
            %path{d: "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"}
            %circle{cx: "12", cy: "7", r: "4"}
        .flex-1
          .font-medium= current_brand_name
          .text-xs.text-gray-500= t('brands.select_brand')
      %svg.w-4.h-4.text-gray-400.transition-transform.group-hover:text-gray-600{fill: "none", stroke: "currentColor", "stroke-width": "2", viewbox: "0 0 24 24", data: { "chevron": true }}
        %path{d: "M6 9l6 6 6-6"}

    .absolute.top-full.left-0.w-full.mt-1.bg-white.rounded-lg.shadow-lg.border.z-50.opacity-0.invisible.transition-all.duration-200.group-hover:opacity-100.group-hover:visible{data: { "brand-dropdown": true }}
      .p-1
        - user_brands.each do |brand|
          %button.flex.items-center.gap-3.w-full.px-3.py-2.text-sm.text-gray-700.hover:bg-gray-100.rounded-md.transition-colors{type: "button", data: { "brand-option": brand.id, "brand-slug": brand.slug }}
            .w-6.h-6.rounded-md.bg-gradient-to-r.from-blue-500.to-purple-600.flex.items-center.justify-center
              %span.text-white.text-xs.font-bold= brand.name.first.upcase
            .flex-1.text-left
              .font-medium= brand.name
              .text-xs.text-gray-500= pluralize(brand.audiences_count, 'audience') + ", " + pluralize(brand.products_count, 'product')
            - if brand == current_brand
              %svg.w-4.h-4.text-green-600{fill: "none", stroke: "currentColor", "stroke-width": "2", viewbox: "0 0 24 24"}
                %path{d: "M20 6L9 17l-5-5"}

        .border-t.mt-1.pt-1
          = link_to brand_path, class: "flex items-center gap-3 w-full px-3 py-2 text-sm text-blue-600 hover:bg-blue-50 rounded-md transition-colors" do
            %svg.w-4.h-4{fill: "none", stroke: "currentColor", "stroke-width": "2", viewbox: "0 0 24 24"}
              %path{d: "M12 6v6m0 0v6m0-6h6m-6 0H6"}
            = t('brands.create_new_brand')

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    const trigger = document.querySelector('[data-brand-switcher-trigger]');
    const dropdown = document.querySelector('[data-brand-dropdown]');
    const chevron = document.querySelector('[data-chevron]');
    const brandOptions = document.querySelectorAll('[data-brand-option]');

    if (trigger && dropdown) {
      let isOpen = false;

      function toggleDropdown() {
        isOpen = !isOpen;
        if (isOpen) {
          dropdown.classList.remove('opacity-0', 'invisible');
          dropdown.classList.add('opacity-100', 'visible');
          chevron.style.transform = 'rotate(180deg)';
        } else {
          dropdown.classList.add('opacity-0', 'invisible');
          dropdown.classList.remove('opacity-100', 'visible');
          chevron.style.transform = 'rotate(0deg)';
        }
      }

      function closeDropdown() {
        if (isOpen) {
          dropdown.classList.add('opacity-0', 'invisible');
          dropdown.classList.remove('opacity-100', 'visible');
          chevron.style.transform = 'rotate(0deg)';
          isOpen = false;
        }
      }

      trigger.addEventListener('click', function(e) {
        e.stopPropagation();
        toggleDropdown();
      });

      // Close when clicking outside
      document.addEventListener('click', function(e) {
        if (!trigger.contains(e.target) && !dropdown.contains(e.target)) {
          closeDropdown();
        }
      });

      // Handle brand selection
      brandOptions.forEach(option => {
        option.addEventListener('click', function() {
          const brandId = this.getAttribute('data-brand-option');
          const brandSlug = this.getAttribute('data-brand-slug');

          // Make request to switch brand
          fetch('/switch_brand', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({
              brand_id: brandId
            })
          }).then(response => {
            if (response.ok) {
              // Redirect to brand dashboard or current page with brand context
              window.location.reload();
            } else {
              showErrorMessage('Failed to switch brand. Please try again.');
            }
          }).catch(error => {
            showErrorMessage('Failed to switch brand. Please try again.');
          });
        });
      });

      function showErrorMessage(message) {
        // Create error notification element
        const errorDiv = document.createElement('div');
        errorDiv.className = 'fixed top-4 right-4 z-50 max-w-md bg-red-50 border border-red-200 rounded-lg shadow-lg p-4 flex items-start gap-3';
        errorDiv.innerHTML = `
          <svg class="w-5 h-5 text-red-600 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/>
          </svg>
          <div class="flex-1">
            <p class="text-sm font-medium text-red-800">${message}</p>
          </div>
          <button type="button" class="text-red-400 hover:text-red-600" onclick="this.parentElement.remove()">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>
        `;
        document.body.appendChild(errorDiv);

        // Auto-remove after 8 seconds
        setTimeout(() => {
          if (errorDiv.parentElement) {
            errorDiv.style.transition = 'opacity 0.3s ease-out';
            errorDiv.style.opacity = '0';
            setTimeout(() => errorDiv.remove(), 300);
          }
        }, 8000);
      }
    }
  });