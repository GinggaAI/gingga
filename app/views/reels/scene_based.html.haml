- content_for :page_title, @presenter.page_title

%main.flex-1.overflow-y-auto
  .p-8
    .max-w-4xl.mx-auto
      .flex.items-center.gap-2.mb-4
        = link_to root_path, class: "text-gray-600 hover:text-gray-800 transition-colors" do
          ←
        %span.text-gray-400 |
        %span.text-gray-600= @presenter.main_title

      .mb-8
        %h1.text-3xl.font-bold.mb-2.text-gray-900= @presenter.main_title
        %p.text-gray-600= @presenter.main_description

      .bg-white.border.border-gray-200.shadow-lg.rounded-2xl.mb-6
        .p-6
          %h2.text-xl.font-semibold.mb-4.text-center= t('reels.choose_creation_method')
          .flex.bg-gray-100.rounded-lg.p-1.max-w-md.mx-auto
            = link_to scene_based_reels_path, class: "flex-1 px-4 py-2 text-center rounded-md font-medium transition-colors text-white", style: "background-color: #FFC857" do
              %span.flex.items-center.justify-center.gap-2
                📹
                = t('reels.tabs.scene_based')
            = link_to narrative_reels_path, class: "flex-1 px-4 py-2 text-center rounded-md font-medium transition-colors text-gray-600 hover:text-gray-900" do
              %span.flex.items-center.justify-center.gap-2
                📝
                = t('reels.tabs.narrative')

          .mt-6.p-4.bg-gradient-to-r.from-orange-50.to-yellow-50.rounded-xl.border.border-orange-200
            %h3.text-lg.font-semibold.mb-2.text-center.text-gray-800= t('reels.scene_based.title')
            %p.text-center.text-gray-600= t('reels.scene_based.description')

      = form_with model: @reel, url: scene_based_reels_path, local: true, data: { controller: "scene-list", scene_list_scene_count_value: 3, scene_list_avatars_value: @presenter.avatars_for_select.to_json }, class: "space-y-6" do |form|
        = form.hidden_field :template, value: "solo_avatars"

        - if @presenter.has_errors?
          .bg-red-50.border.border-red-200.rounded-2xl.p-4
            .flex.items-start.gap-3
              %div.flex-shrink-0.mt-0.5
                ⚠️
              %div
                %h4.text-red-800.font-medium= @presenter.error_title
                %ul.mt-2.text-red-600.text-sm.space-y-1
                  - @presenter.error_messages.each do |message|
                    %li= message

        .bg-white.border.border-gray-200.shadow-lg.rounded-2xl
          .p-6
            .flex.items-center.gap-3.mb-4
              %div.w-8.h-8.bg-blue-100.rounded-lg.flex.items-center.justify-center
                📝
              %div
                %h3.text-lg.font-semibold.text-gray-900= @presenter.basic_info_title
                %p.text-sm.text-gray-600= @presenter.basic_info_description

            .space-y-6
              %div
                = form.label :title, @presenter.title_label, class: "block text-sm font-medium text-gray-700 mb-2"
                = form.text_field :title, placeholder: @presenter.title_placeholder, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"

              %div
                = form.label :description, @presenter.description_label, class: "block text-sm font-medium text-gray-700 mb-2"
                = form.text_area :description, placeholder: @presenter.description_placeholder, rows: 3, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"

        .bg-white.border.border-gray-200.shadow-lg.rounded-2xl
          .p-6
            .flex.items-center.gap-3.mb-4
              %div.w-8.h-8.bg-purple-100.rounded-lg.flex.items-center.justify-center
                🤖
              %div
                %h3.text-lg.font-semibold.text-gray-900= @presenter.ai_avatar_title
                %p.text-sm.text-gray-600= @presenter.ai_avatar_description

            .p-4.bg-gray-50.rounded-lg
              .flex.items-center.justify-between
                %div
                  %div.font-medium.text-gray-900= @presenter.use_ai_avatars_label
                  %div.text-sm.text-gray-600= @presenter.use_ai_avatars_description
                %div
                  %label.inline-flex.items-center.cursor-pointer
                    %input{type: "checkbox", name: "reel[use_ai_avatar]", value: "1", checked: true, class: "sr-only peer", "data-action": "change->scene-list#toggleAiAvatars", "data-scene-list-target": "aiToggle"}
                    %div{class: "relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"}
                    %input{type: "hidden", name: "reel[use_ai_avatar]", value: "0"}

        .bg-white.border.border-gray-200.shadow-lg.rounded-2xl
          .p-6
            .flex.items-center.gap-3.mb-4
              %div.w-8.h-8.bg-green-100.rounded-lg.flex.items-center.justify-center
                🎬
              %div
                %h3.text-lg.font-semibold.text-gray-900= @presenter.scene_breakdown_title
                %p.text-sm.text-gray-600= @presenter.scene_breakdown_description

            .mb-4.flex.items-center.justify-between
              %span.text-sm.font-medium.text-gray-700
                %span{ data: { scene_list_target: "sceneCounter" } }= @presenter.scene_count
                = @presenter.scenes_label
              %button.inline-flex.items-center.gap-2.px-3.py-2.text-sm.font-medium.text-gray-600.border.border-gray-300.rounded-lg.hover:bg-gray-50{ type: "button", data: { action: "click->scene-list#addScene" } }
                +
                = @presenter.add_scene_label

            .space-y-4{ data: { scene_list_target: "scenesContainer" } }
              - @presenter.scene_count.times do |i|
                .bg-gray-50.p-4.rounded-lg.border.border-gray-200{ data: { scene_list_target: "scene" } }
                  .flex.items-center.justify-between.mb-3
                    %h4.font-medium.text-gray-900= t('reels.scene_based.scene_number', number: i + 1)
                    %span.text-xs.bg-blue-100.text-blue-800.px-2.py-1.rounded-full= t('reels.scene_based.sections_count')
                  
                  .mb-4
                    %label.block.text-xs.font-medium.text-gray-700.mb-2= t('reels.scene_based.video_type')
                    %select.w-full.p-2.text-sm.border.border-gray-300.rounded-md.focus:ring-2.focus:ring-blue-500.focus:border-blue-500{ name: "reel[reel_scenes_attributes][#{i}][video_type]", data: { scene_list_target: "videoTypeSelect", action: "change->scene-list#handleVideoTypeChange" } }
                      %option{value: "avatar"}
                        🤖 #{t('reels.scene_based.avatar_video')}
                      %option{value: "kling", selected: true}
                        🎬 #{t('reels.scene_based.kling_video')}

                  .grid.grid-cols-1.md:grid-cols-2.gap-4{ data: { scene_list_target: "avatarFields" } }
                    %div
                      %label.block.text-xs.font-medium.text-gray-700.mb-1= t('reels.scene_based.avatar')
                      %select.w-full.p-2.text-sm.border.border-gray-300.rounded-md.focus:ring-2.focus:ring-blue-500.focus:border-blue-500{name: "reel[reel_scenes_attributes][#{i}][avatar_id]"}
                        %option{value: ""}= t('reels.scene_based.select_avatar')
                        - if @presenter.has_avatars?
                          - @presenter.avatars_for_select.each do |avatar_name, avatar_id|
                            %option{value: avatar_id}= avatar_name
                        - else
                          %option{value: "", disabled: true}= @presenter.no_avatars_message
                    %div
                      %label.block.text-xs.font-medium.text-gray-700.mb-1= t('reels.scene_based.voice')
                      %select.w-full.p-2.text-sm.border.border-gray-300.rounded-md.focus:ring-2.focus:ring-blue-500.focus:border-blue-500{name: "reel[reel_scenes_attributes][#{i}][voice_id]"}
                        %option{value: ""}= t('reels.scene_based.select_voice')
                        - if @presenter.has_voices?
                          - @presenter.voices_for_select.each do |voice_name, voice_id|
                            %option{value: voice_id}= voice_name
                        - else
                          %option{value: "", disabled: true}= @presenter.no_voices_message

                  .mt-3
                    %label.block.text-xs.font-medium.text-gray-700.mb-1= t('reels.scene_based.script')
                    %textarea.w-full.p-2.text-sm.border.border-gray-300.rounded-md.focus:ring-2.focus:ring-blue-500.focus:border-blue-500{name: "reel[reel_scenes_attributes][#{i}][script]", rows: 3, placeholder: t('reels.scene_based.script_placeholder', number: i + 1)}

        .bg-white.border.border-gray-200.shadow-lg.rounded-2xl
          .p-6
            .flex.items-center.gap-3.mb-4
              %div.w-8.h-8.bg-yellow-100.rounded-lg.flex.items-center.justify-center
                📋
              %div
                %h3.text-lg.font-semibold.text-gray-900= @presenter.additional_instructions_title
                %p.text-sm.text-gray-600= @presenter.additional_instructions_description

            %div
              = form.label :additional_instructions, @presenter.style_direction_label, class: "block text-sm font-medium text-gray-700 mb-2"
              = form.text_area :additional_instructions, placeholder: @presenter.style_direction_placeholder, rows: 4, class: "w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"

        .flex.justify-center.pt-6
          %button.inline-flex.items-center.justify-center.gap-2.bg-gradient-to-r.from-yellow-400.to-orange-500.text-gray-900.font-bold.py-4.px-8.rounded-xl.shadow-lg.hover:from-yellow-500.hover:to-orange-600.hover:shadow-xl.transform.hover:scale-105.transition-all.duration-300{type: "submit"}
            🎬
            = @presenter.submit_button_label
