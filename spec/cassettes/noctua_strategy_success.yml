---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o","temperature":0.4,"response_format":{"type":"json_object"},"messages":[{"role":"system","content":"You
        are CREAS Strategist (Noctua). Design a monthly social content plan balancing
        the 5 pillars:\nC Growth • R Retention • E Scalability • A Activation • S
        Satisfaction.\nKey rule: prioritize the month''s primary objective (awareness
        | engagement | sales | community) while always covering all 5 pillars. When
        specific objective details are provided in the brief, incorporate them deeply
        into the content strategy to make it highly targeted and specific. Include
        concrete remix/duet opportunities.\n\nMANDATORY BRIEF (ask \u0026 wait)\n1
        Brand name; 2 Sector/industry; 3 Audience profile (demographics, pains, digital
        behavior);\n4 Languages: publishing language(s); account primary language;
        bilingual split %;\n5 Target region \u0026 timezone; 6 Value proposition;
        7 Main offer/product; 8 Purpose/mission;\n9 Tone \u0026 style; 10 Priority
        platforms; 11 Monthly themes/campaigns;\n12 Primary objective (awareness |
        engagement | sales | community) and specific objective details (if provided,
        use these to create highly targeted content);\n13 Available resources (stock/podcast
        clips/editing/budget/AI avatars/Kling…);\n14 Posts per week (int); 15 Remix/duet
        references; 16 Restrictions/guardrails (legal, banned words, claims rules)
        + preferred CTAs.\nIf a critical item is missing, ask before generating.\n\nSTRATEGY
        RULES\n• CRITICAL: weekly_plan must contain exactly 4 weeks, each with exactly
        frequency_per_week ideas in the ideas array.\n• Generate exactly frequency_per_week
        × 4 weeks of content ideas (e.g., 3/week = 12 total, 4/week = 16 total).\n•
        When objective_details are provided in the brief, ensure all content ideas
        specifically support and reflect these detailed goals rather than being generic.\n•
        Distribute weekly posting volume strategically across platforms/pillars.\n•
        Map clear goals \u0026 formats to each pillar.\n• Every idea must include
        a specific hook + story logic that connects to the objective details when
        provided.\n• Balance: primary pillar = 40–50% of pieces; other four pillars
        = 50–60% total.\n• Include feasible remix/duet angles (topic + style).\n•
        Respect resources + languages.\n• Output JSON only, exactly matching the contract.\n\nOUTPUT
        CONTRACT (single JSON object; no prose)\nRoot:\n{\n  \"brand_name\":\"...\",
        \"brand_slug\":\"...\", \"strategy_name\":\"...\",\n  \"month\":\"YYYY-MM\",
        \"general_theme\":\"...\",\n  \"objective_of_the_month\":\"awareness | engagement
        | sales | community\",\n  \"frequency_per_week\":[frecuency_per_week],\n  \"platforms\":[\"Instagram\",\"TikTok\"],\n  \"tone_style\":\"...\",\n  \"content_language\":\"en-US\",
        \"account_language\":\"en-US\",\n  \"target_region\":\"...\", \"timezone\":\"...\",\n  \"subtitle_languages\":[],
        \"dub_languages\":[],\n  \"publish_windows_local\":{},   // optional, local
        HH:MM-HH:MM ranges\n  \"brand_guardrails\":{\"banned_words\":[],\"claims_rules\":\"\",\"tone_no_go\":[]},\n  \"post_types\":[\"Video\",\"Image\",\"Carousel\",\"Text\"],\n\n  \"content_distribution\":
        { \"C\": PILLAR_OBJ, \"R\": PILLAR_OBJ, \"E\": PILLAR_OBJ, \"A\": PILLAR_OBJ,
        \"S\": PILLAR_OBJ },\n\n  \"remix_duet_plan\": {\n    \"rationale\":\"Why
        remix/duet helps this month\",\n    \"opportunities\":[{\"id\":\"YYYYMM-\u003cbrand_slug\u003e-RMX-1\",\"title\":\"...\",\"style\":\"reaction
        | pip | caption-overlay\",\"recommended_template\":\"remix\",\"video_source\":\"external\",\"assets_hints\":{\"external_video_url\":\"\"},\"script_angle\":\"Insight
        + takeaway + CTA\",\"kpi_focus\":\"reach\",\"success_criteria\":\"≥X views/48h\"}]\n  },\n\n  \"weekly_plan\":[\n    {\"week\":1,\"publish_cadence\":frequency_per_week,\"ideas\":[WEEK_IDEA_OBJ,WEEK_IDEA_OBJ,WEEK_IDEA_OBJ]},\n    {\"week\":2,\"publish_cadence\":frequency_per_week,\"ideas\":[WEEK_IDEA_OBJ,WEEK_IDEA_OBJ,WEEK_IDEA_OBJ]},\n    {\"week\":3,\"publish_cadence\":frequency_per_week,\"ideas\":[WEEK_IDEA_OBJ,WEEK_IDEA_OBJ,WEEK_IDEA_OBJ]},\n    {\"week\":4,\"publish_cadence\":frequency_per_week,\"ideas\":[WEEK_IDEA_OBJ,WEEK_IDEA_OBJ,WEEK_IDEA_OBJ]}\n  ]\n  \n  CRITICAL:
        Each week MUST have exactly frequency_per_week items in the ideas array. \n  If
        frequency_per_week=3, each week needs exactly 3 items.\n  If frequency_per_week=4,
        each week needs exactly 4 items.\n  NO EXCEPTIONS. COUNT THE ITEMS BEFORE
        RESPONDING.\n}\n\nPILLAR_OBJ (use for each key C/R/E/A/S):\n{\n  \"goal\":\"...\",
        \"formats\":[\"...\",\"...\"],\n  \"ideas\":[IDEA_OBJ, IDEA_OBJ]\n}\n\nIDEA_OBJ
        (for content_distribution ideas):\n{\n  \"id\":\"YYYYMM-\u003cbrand_slug\u003e-\u003cPILLAR\u003e-w\u003cweek\u003e-i\u003cidx\u003e\",\n  \"status\":\"draft
        | in_production | ready_for_review | approved\",\n  \"title\":\"...\", \"hook\":\"...\",\n  \"description\":\"Highly
        detailed tactical brief (context, beats, key points, pillar objective, tone
        cues, concrete examples).\",\n  \"platform\":\"Instagram | TikTok | YouTube
        Shorts | LinkedIn\",\n  \"recommended_template\":\"solo_avatars | avatar_and_video
        | narration_over_7_images | remix | one_to_three_videos\",\n  \"video_source\":\"none
        | external | kling\",\n  \"visual_notes\":\"Shots, pacing, captions, overlays.\",\n  \"assets_hints\":{\"external_video_url\":\"\",\"external_video_notes\":\"e.g.,
        use 00:03–00:08 for Hook\",\"video_prompts\":[],\"broll_suggestions\":[]},\n  \"kpi_focus\":\"reach
        | saves | comments | CTR | DM\",\n  \"success_criteria\":\"e.g., ≥8% saves\",\n  \"beats_outline\":[\"Hook:
        ...\",\"Value: ...\",\"CTA: ...\"],\n  \"cta\":\"Specific CTA\",\n  \"pilar\":\"C|R|E|A|S\",\n  \"repurpose_to\":[],
        \"language_variants\":[]\n}\n\nWEEK_IDEA_OBJ (for weekly_plan.ideas):\n{\n  \"id\":\"YYYYMM-\u003cbrand_slug\u003e-w\u003cweek\u003e-i\u003cidx\u003e-\u003cPILLAR\u003e\",\n  \"status\":\"draft\",\n  \"title\":\"...\",
        \"hook\":\"...\",\n  \"description\":\"Production-ready brief (context, beats,
        examples, pillar objective, tone, language variants).\",\n  \"platform\":\"Instagram
        Reels\",\n  \"pilar\":\"C|R|E|A|S\",\n  \"recommended_template\":\"solo_avatars
        | avatar_and_video | narration_over_7_images | remix | one_to_three_videos\",\n  \"video_source\":\"none
        | external | kling\",\n  \"visual_notes\":\"...\",\n  \"assets_hints\":{\"external_video_url\":\"\",\"video_prompts\":[],\"broll_suggestions\":[]},\n  \"kpi_focus\":\"reach\",
        \"success_criteria\":\"≥X metric\",\n  \"beats_outline\":[\"Hook\",\"Value\",\"CTA\"],\n  \"cta\":\"...\",
        \"repurpose_to\":[], \"language_variants\":[]\n}\n\nID RULES\nbrand_slug:
        lowercase, hyphenated from brand_name (no spaces/accents). week starts at
        1; idx starts at 1. IDs must be unique.\nDistribution IDs: YYYYMM-\u003cbrand_slug\u003e-\u003cPILLAR\u003e-w\u003cweek\u003e-i\u003cidx\u003e\nWeekly
        IDs: YYYYMM-\u003cbrand_slug\u003e-w\u003cweek\u003e-i\u003cidx\u003e-\u003cPILLAR\u003e\n\nALLOWED
        VALUES\nobjective_of_the_month: awareness | engagement | sales | community\nrecommended_template:
        solo_avatars | avatar_and_video | narration_over_7_images | remix | one_to_three_videos\nvideo_source:
        none | external | kling\nkpi_focus: reach | saves | comments | CTR | DM\nstatus:
        draft | in_production | ready_for_review | approved\n\nFINAL VALIDATION CHECKLIST
        (MANDATORY - auto-check before output):\n✓ 1. Brief complete; else ask\n✓
        2. CRITICAL MATH CHECK: weekly_plan has exactly 4 weeks\n✓ 3. CRITICAL COUNT
        CHECK: Each week has EXACTLY frequency_per_week ideas (count them!)\n   -
        Week 1 ideas array length = frequency_per_week ✓\n   - Week 2 ideas array
        length = frequency_per_week ✓  \n   - Week 3 ideas array length = frequency_per_week
        ✓\n   - Week 4 ideas array length = frequency_per_week ✓\n✓ 4. CRITICAL TOTAL
        CHECK: Total ideas = frequency_per_week × 4\n✓ 5. Primary pillar 40–50%; others
        50–60% total\n✓ 6. Language guidance aligns with content_language/splits\n✓
        7. Each idea has recommended_template + correct video_source\n✓ 8. All IDs
        valid/unique; month = YYYY-MM\n✓ 9. Respect brand_guardrails\n✓ 10. Return
        single JSON object; no prose/markdown\n\nSTOP AND COUNT THE IDEAS IN EACH
        WEEK BEFORE RESPONDING!\n"},{"role":"user","content":"# MANDATORY BRIEF\n{\"brand_name\":\"EcoGlow
        Beauty\",\"industry\":\"Skincare \\u0026 Beauty\",\"audience_profile\":\"Women
        aged 25-45, environmentally conscious, middle to high income, active on social
        media\",\"content_language\":\"en-US\",\"account_language\":\"en-US\",\"target_region\":\"North
        America\",\"timezone\":\"EST\",\"value_proposition\":\"Natural, effective
        skincare that protects your skin and the planet\",\"main_offer\":\"Eco-friendly
        skincare products with natural ingredients\",\"mission\":\"To provide clean
        beauty solutions that are good for you and the environment\",\"tone_style\":\"Authentic,
        educational, and inspiring\",\"priority_platforms\":[\"Instagram\",\"TikTok\"],\"monthly_themes\":[\"Natural
        ingredients education\",\"Sustainability awareness\"],\"objective_of_the_month\":\"awareness\",\"available_resources\":\"AI
        avatars, stock footage, editing tools\",\"frequency_per_week\":3,\"guardrails\":\"No
        medical claims, focus on natural benefits\",\"preferred_ctas\":\"Shop now,
        Learn more, Discover natural beauty\"}\n"}]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 31 Aug 2025 20:36:53 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-q9y5zog3dre23sibb14mkovp
      Openai-Processing-Ms:
      - '36186'
      Openai-Project:
      - proj_UubrcgXHT3kZCCO0wLYXoBxg
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '36191'
      X-Ratelimit-Limit-Requests:
      - '500'
      X-Ratelimit-Limit-Tokens:
      - '30000'
      X-Ratelimit-Remaining-Requests:
      - '499'
      X-Ratelimit-Remaining-Tokens:
      - '27898'
      X-Ratelimit-Reset-Requests:
      - 120ms
      X-Ratelimit-Reset-Tokens:
      - 4.204s
      X-Request-Id:
      - req_12856b8b08be4ba7b7a29fd694726f5e
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=oWLnx6wAV3DMu6oAfAQ1BEg11oySDSP9MW0z05gQRHc-1756672613-1.0.1.1-JePKozkU0KGTnnMNluMzGvczZ8RS8M0Fqrzv7i2dQUSMieM7f9zf4GDioV9uftByqtOOnLy8q2o3bfZ9f_T.70GkE.RnXZzZZBusn.KDsIg;
        path=/; expires=Sun, 31-Aug-25 21:06:53 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=oR8CtlholWslorWbr4xMKRAXO0i9jypWmdJOXi.2AVA-1756672613753-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 977f51b83c87330e-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJpZCI6ICJjaGF0Y21wbC1DQWo0YnEyZXQ4Q1RmZWhxd2FtUXJuU0JwNzFtZiIsCiAgIm9iamVjdCI6ICJjaGF0LmNvbXBsZXRpb24iLAogICJjcmVhdGVkIjogMTc1NjY3MjU3NywKICAibW9kZWwiOiAiZ3B0LTRvLTIwMjQtMDgtMDYiLAogICJjaG9pY2VzIjogWwogICAgewogICAgICAiaW5kZXgiOiAwLAogICAgICAibWVzc2FnZSI6IHsKICAgICAgICAicm9sZSI6ICJhc3Npc3RhbnQiLAogICAgICAgICJjb250ZW50IjogIntcbiAgXCJicmFuZF9uYW1lXCI6IFwiRWNvR2xvdyBCZWF1dHlcIixcbiAgXCJicmFuZF9zbHVnXCI6IFwiZWNvZ2xvdy1iZWF1dHlcIixcbiAgXCJzdHJhdGVneV9uYW1lXCI6IFwiRWNvR2xvdyBCZWF1dHkgQXdhcmVuZXNzIEJvb3N0XCIsXG4gIFwibW9udGhcIjogXCIyMDIzLTExXCIsXG4gIFwiZ2VuZXJhbF90aGVtZVwiOiBcIk5hdHVyYWwgaW5ncmVkaWVudHMgZWR1Y2F0aW9uIGFuZCBzdXN0YWluYWJpbGl0eSBhd2FyZW5lc3NcIixcbiAgXCJvYmplY3RpdmVfb2ZfdGhlX21vbnRoXCI6IFwiYXdhcmVuZXNzXCIsXG4gIFwiZnJlcXVlbmN5X3Blcl93ZWVrXCI6IDMsXG4gIFwicGxhdGZvcm1zXCI6IFtcIkluc3RhZ3JhbVwiLCBcIlRpa1Rva1wiXSxcbiAgXCJ0b25lX3N0eWxlXCI6IFwiQXV0aGVudGljLCBlZHVjYXRpb25hbCwgYW5kIGluc3BpcmluZ1wiLFxuICBcImNvbnRlbnRfbGFuZ3VhZ2VcIjogXCJlbi1VU1wiLFxuICBcImFjY291bnRfbGFuZ3VhZ2VcIjogXCJlbi1VU1wiLFxuICBcInRhcmdldF9yZWdpb25cIjogXCJOb3J0aCBBbWVyaWNhXCIsXG4gIFwidGltZXpvbmVcIjogXCJFU1RcIixcbiAgXCJzdWJ0aXRsZV9sYW5ndWFnZXNcIjogW10sXG4gIFwiZHViX2xhbmd1YWdlc1wiOiBbXSxcbiAgXCJwdWJsaXNoX3dpbmRvd3NfbG9jYWxcIjoge1xuICAgIFwiSW5zdGFncmFtXCI6IFwiMDk6MDAtMTE6MDBcIixcbiAgICBcIlRpa1Rva1wiOiBcIjEyOjAwLTE0OjAwXCJcbiAgfSxcbiAgXCJicmFuZF9ndWFyZHJhaWxzXCI6IHtcbiAgICBcImJhbm5lZF93b3Jkc1wiOiBbXSxcbiAgICBcImNsYWltc19ydWxlc1wiOiBcIk5vIG1lZGljYWwgY2xhaW1zLCBmb2N1cyBvbiBuYXR1cmFsIGJlbmVmaXRzXCIsXG4gICAgXCJ0b25lX25vX2dvXCI6IFtdXG4gIH0sXG4gIFwicG9zdF90eXBlc1wiOiBbXCJWaWRlb1wiLCBcIkltYWdlXCIsIFwiQ2Fyb3VzZWxcIiwgXCJUZXh0XCJdLFxuICBcImNvbnRlbnRfZGlzdHJpYnV0aW9uXCI6IHtcbiAgICBcIkNcIjoge1xuICAgICAgXCJnb2FsXCI6IFwiSW5jcmVhc2UgYnJhbmQgYXdhcmVuZXNzIHRocm91Z2ggZWR1Y2F0aW9uYWwgY29udGVudFwiLFxuICAgICAgXCJmb3JtYXRzXCI6IFtcIlZpZGVvXCIsIFwiSW1hZ2VcIl0sXG4gICAgICBcImlkZWFzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktQy13MS1pMVwiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiRGlzY292ZXIgdGhlIFBvd2VyIG9mIE5hdHVyYWwgSW5ncmVkaWVudHNcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJEaWQgeW91IGtub3cgdGhlc2UgbmF0dXJhbCBpbmdyZWRpZW50cyBjYW4gdHJhbnNmb3JtIHlvdXIgc2tpbj9cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiSGlnaGxpZ2h0IGtleSBuYXR1cmFsIGluZ3JlZGllbnRzIHVzZWQgaW4gRWNvR2xvdyBwcm9kdWN0cyB3aXRoIGEgZm9jdXMgb24gdGhlaXIgYmVuZWZpdHMuIFVzZSBBSSBhdmF0YXJzIHRvIG5hcnJhdGUgYW5kIHN0b2NrIGZvb3RhZ2UgZm9yIHZpc3VhbHMuIEVtcGhhc2l6ZSB0aGUgZW52aXJvbm1lbnRhbCBiZW5lZml0cyBvZiBjaG9vc2luZyBuYXR1cmFsIGluZ3JlZGllbnRzLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJJbnN0YWdyYW1cIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwiYXZhdGFyX2FuZF92aWRlb1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwia2xpbmdcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkJyaWdodCwgY2xlYW4gdmlzdWFscyB3aXRoIG92ZXJsYXkgdGV4dCBoaWdobGlnaHRpbmcgYmVuZWZpdHMuXCIsXG4gICAgICAgICAgXCJhc3NldHNfaGludHNcIjoge1xuICAgICAgICAgICAgXCJleHRlcm5hbF92aWRlb191cmxcIjogXCJcIixcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fbm90ZXNcIjogXCJcIixcbiAgICAgICAgICAgIFwidmlkZW9fcHJvbXB0c1wiOiBbXSxcbiAgICAgICAgICAgIFwiYnJvbGxfc3VnZ2VzdGlvbnNcIjogW1wiY2xvc2UtdXBzIG9mIGluZ3JlZGllbnRzXCIsIFwibmF0dXJlIHNjZW5lc1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJyZWFjaFwiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTEwLDAwMCB2aWV3c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rOiBEaWQgeW91IGtub3cgdGhlc2UgbmF0dXJhbCBpbmdyZWRpZW50cyBjYW4gdHJhbnNmb3JtIHlvdXIgc2tpbj9cIiwgXCJWYWx1ZTogSGlnaGxpZ2h0IGJlbmVmaXRzIG9mIGVhY2ggaW5ncmVkaWVudC5cIiwgXCJDVEE6IERpc2NvdmVyIG5hdHVyYWwgYmVhdXR5IHdpdGggRWNvR2xvdy5cIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJEaXNjb3ZlciBuYXR1cmFsIGJlYXV0eVwiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJDXCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcIlJcIjoge1xuICAgICAgXCJnb2FsXCI6IFwiUmV0YWluIGF1ZGllbmNlIHRocm91Z2ggZW5nYWdpbmcgY29udGVudFwiLFxuICAgICAgXCJmb3JtYXRzXCI6IFtcIkNhcm91c2VsXCIsIFwiVmlkZW9cIl0sXG4gICAgICBcImlkZWFzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktUi13Mi1pMVwiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiRWNvLUZyaWVuZGx5IFNraW5jYXJlIFJvdXRpbmVcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJUcmFuc2Zvcm0geW91ciByb3V0aW5lIHdpdGggZWNvLWZyaWVuZGx5IGNob2ljZXMhXCIsXG4gICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlNob3djYXNlIGEgc3RlcC1ieS1zdGVwIGVjby1mcmllbmRseSBza2luY2FyZSByb3V0aW5lIHVzaW5nIEVjb0dsb3cgcHJvZHVjdHMuIFVzZSBhIGNhcm91c2VsIGZvcm1hdCB0byBicmVhayBkb3duIGVhY2ggc3RlcCB3aXRoIHZpc3VhbHMgYW5kIGNhcHRpb25zLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJJbnN0YWdyYW1cIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwibmFycmF0aW9uX292ZXJfN19pbWFnZXNcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcIm5vbmVcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIlVzZSBzb2Z0LCBuYXR1cmFsIGxpZ2h0aW5nIGFuZCBjbG9zZS11cHMgb2YgcHJvZHVjdCBhcHBsaWNhdGlvbi5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJleHRlcm5hbF92aWRlb19ub3Rlc1wiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJhcHBsaWNhdGlvbiBzaG90c1wiLCBcInByb2R1Y3QgdGV4dHVyZXNcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwic2F2ZXNcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaU1MDAgc2F2ZXNcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9vazogVHJhbnNmb3JtIHlvdXIgcm91dGluZSB3aXRoIGVjby1mcmllbmRseSBjaG9pY2VzIVwiLCBcIlZhbHVlOiBTdGVwLWJ5LXN0ZXAgZ3VpZGUgdG8gYW4gZWNvLWZyaWVuZGx5IHNraW5jYXJlIHJvdXRpbmUuXCIsIFwiQ1RBOiBMZWFybiBtb3JlIGFib3V0IGVhY2ggcHJvZHVjdC5cIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJMZWFybiBtb3JlXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIlJcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFwiRVwiOiB7XG4gICAgICBcImdvYWxcIjogXCJFeHBhbmQgcmVhY2ggdGhyb3VnaCBzY2FsYWJsZSBjb250ZW50XCIsXG4gICAgICBcImZvcm1hdHNcIjogW1wiVmlkZW9cIl0sXG4gICAgICBcImlkZWFzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktRS13My1pMVwiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiU3VzdGFpbmFiaWxpdHkgaW4gU2tpbmNhcmVcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJXaHkgc3VzdGFpbmFiaWxpdHkgbWF0dGVycyBpbiBza2luY2FyZS5cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQ3JlYXRlIGEgdmlkZW8gZXhwbGFpbmluZyB0aGUgaW1wb3J0YW5jZSBvZiBzdXN0YWluYWJpbGl0eSBpbiBza2luY2FyZSBhbmQgaG93IEVjb0dsb3cgY29udHJpYnV0ZXMgdG8gdGhpcyBjYXVzZS4gVXNlIEFJIGF2YXRhcnMgZm9yIG5hcnJhdGlvbiBhbmQgc3RvY2sgZm9vdGFnZSBmb3IgdmlzdWFscy5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiVGlrVG9rXCIsXG4gICAgICAgICAgXCJyZWNvbW1lbmRlZF90ZW1wbGF0ZVwiOiBcInNvbG9fYXZhdGFyc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwia2xpbmdcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkR5bmFtaWMgdHJhbnNpdGlvbnMgYW5kIGVuZ2FnaW5nIGNhcHRpb25zLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX25vdGVzXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcImVudmlyb25tZW50YWwgaW1wYWN0XCIsIFwicHJvZHVjdCBsaWZlY3ljbGVcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxNSwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9vazogV2h5IHN1c3RhaW5hYmlsaXR5IG1hdHRlcnMgaW4gc2tpbmNhcmUuXCIsIFwiVmFsdWU6IERpc2N1c3MgRWNvR2xvdydzIHN1c3RhaW5hYmxlIHByYWN0aWNlcy5cIiwgXCJDVEE6IFNob3Agbm93IHRvIHN1cHBvcnQgc3VzdGFpbmFibGUgYmVhdXR5LlwiXSxcbiAgICAgICAgICBcImN0YVwiOiBcIlNob3Agbm93XCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIkVcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFwiQVwiOiB7XG4gICAgICBcImdvYWxcIjogXCJBY3RpdmF0ZSBuZXcgdXNlcnMgdGhyb3VnaCBjb21wZWxsaW5nIHN0b3JpZXNcIixcbiAgICAgIFwiZm9ybWF0c1wiOiBbXCJWaWRlb1wiLCBcIlRleHRcIl0sXG4gICAgICBcImlkZWFzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktQS13NC1pMVwiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiQ3VzdG9tZXIgU3RvcmllczogTmF0dXJhbCBCZWF1dHkgVHJhbnNmb3JtYXRpb25zXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiUmVhbCBzdG9yaWVzIG9mIHRyYW5zZm9ybWF0aW9uIHdpdGggRWNvR2xvdy5cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiRmVhdHVyZSBjdXN0b21lciB0ZXN0aW1vbmlhbHMgYW5kIHN0b3JpZXMgYWJvdXQgdGhlaXIgam91cm5leSB3aXRoIEVjb0dsb3cgcHJvZHVjdHMuIFVzZSB0ZXh0IG92ZXJsYXkgb24gdmlkZW9zIHRvIGhpZ2hsaWdodCBrZXkgcG9pbnRzLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJJbnN0YWdyYW1cIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwib25lX3RvX3RocmVlX3ZpZGVvc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwiZXh0ZXJuYWxcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkluY29ycG9yYXRlIHVzZXItZ2VuZXJhdGVkIGNvbnRlbnQgd2l0aCBwcm9mZXNzaW9uYWwgZWRpdGluZy5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJleHRlcm5hbF92aWRlb19ub3Rlc1wiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJiZWZvcmUgYW5kIGFmdGVyXCIsIFwiY3VzdG9tZXIgaW50ZXJ2aWV3c1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJjb21tZW50c1wiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTIwMCBjb21tZW50c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rOiBSZWFsIHN0b3JpZXMgb2YgdHJhbnNmb3JtYXRpb24gd2l0aCBFY29HbG93LlwiLCBcIlZhbHVlOiBTaGFyZSBhdXRoZW50aWMgY3VzdG9tZXIgZXhwZXJpZW5jZXMuXCIsIFwiQ1RBOiBTaGFyZSB5b3VyIG93biBzdG9yeS5cIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJTaGFyZSB5b3VyIG93biBzdG9yeVwiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJBXCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcIlNcIjoge1xuICAgICAgXCJnb2FsXCI6IFwiU2F0aXNmeSBjdXN0b21lciBjdXJpb3NpdHkgd2l0aCBpbmZvcm1hdGl2ZSBjb250ZW50XCIsXG4gICAgICBcImZvcm1hdHNcIjogW1wiVmlkZW9cIiwgXCJJbWFnZVwiXSxcbiAgICAgIFwiaWRlYXNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMjMxMS1lY29nbG93LWJlYXV0eS1TLXcxLWkyXCIsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJkcmFmdFwiLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJCZWhpbmQgdGhlIFNjZW5lczogRWNvR2xvdydzIFByb2R1Y3Rpb25cIixcbiAgICAgICAgICBcImhvb2tcIjogXCJFdmVyIHdvbmRlcmVkIGhvdyBvdXIgZWNvLWZyaWVuZGx5IHByb2R1Y3RzIGFyZSBtYWRlP1wiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJUYWtlIHZpZXdlcnMgYmVoaW5kIHRoZSBzY2VuZXMgb2YgRWNvR2xvdydzIHByb2R1Y3Rpb24gcHJvY2Vzcy4gSGlnaGxpZ2h0IHN1c3RhaW5hYmxlIHByYWN0aWNlcyBhbmQgbmF0dXJhbCBpbmdyZWRpZW50IHNvdXJjaW5nLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJUaWtUb2tcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwicmVtaXhcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImV4dGVybmFsXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJVc2UgZW5nYWdpbmcsIGZhc3QtcGFjZWQgZWRpdGluZyB3aXRoIGluZm9ybWF0aXZlIGNhcHRpb25zLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX25vdGVzXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcInByb2R1Y3Rpb24gbGluZVwiLCBcImluZ3JlZGllbnQgc291cmNpbmdcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxMiwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9vazogRXZlciB3b25kZXJlZCBob3cgb3VyIGVjby1mcmllbmRseSBwcm9kdWN0cyBhcmUgbWFkZT9cIiwgXCJWYWx1ZTogU2hvd2Nhc2Ugc3VzdGFpbmFibGUgcHJvZHVjdGlvbiBtZXRob2RzLlwiLCBcIkNUQTogRGlzY292ZXIgb3VyIHByb2Nlc3MuXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiRGlzY292ZXIgb3VyIHByb2Nlc3NcIixcbiAgICAgICAgICBcInBpbGFyXCI6IFwiU1wiLFxuICAgICAgICAgIFwicmVwdXJwb3NlX3RvXCI6IFtdLFxuICAgICAgICAgIFwibGFuZ3VhZ2VfdmFyaWFudHNcIjogW11cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfSxcbiAgXCJyZW1peF9kdWV0X3BsYW5cIjoge1xuICAgIFwicmF0aW9uYWxlXCI6IFwiTGV2ZXJhZ2luZyByZW1peC9kdWV0IGZvcm1hdHMgd2lsbCBoZWxwIGVuZ2FnZSB0aGUgYXVkaWVuY2UgYnkgZW5jb3VyYWdpbmcgdGhlbSB0byBwYXJ0aWNpcGF0ZSBhbmQgY3JlYXRlIHRoZWlyIG93biBjb250ZW50LCB0aHVzIGluY3JlYXNpbmcgcmVhY2ggYW5kIGF3YXJlbmVzcy5cIixcbiAgICBcIm9wcG9ydHVuaXRpZXNcIjogW1xuICAgICAge1xuICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LVJNWC0xXCIsXG4gICAgICAgIFwidGl0bGVcIjogXCJFY29HbG93IEluZ3JlZGllbnQgQ2hhbGxlbmdlXCIsXG4gICAgICAgIFwic3R5bGVcIjogXCJyZWFjdGlvblwiLFxuICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwicmVtaXhcIixcbiAgICAgICAgXCJ2aWRlb19zb3VyY2VcIjogXCJleHRlcm5hbFwiLFxuICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgXCJleHRlcm5hbF92aWRlb191cmxcIjogXCJcIixcbiAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX25vdGVzXCI6IFwiVXNlIGNsaXBzIG9mIG5hdHVyYWwgaW5ncmVkaWVudHMgYmVpbmcgdXNlZCBpbiBjcmVhdGl2ZSB3YXlzLlwiLFxuICAgICAgICAgIFwidmlkZW9fcHJvbXB0c1wiOiBbXVxuICAgICAgICB9LFxuICAgICAgICBcInNjcmlwdF9hbmdsZVwiOiBcIkluc2lnaHQgKyB0YWtlYXdheSArIENUQVwiLFxuICAgICAgICBcImtwaV9mb2N1c1wiOiBcInJlYWNoXCIsXG4gICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTIwLDAwMCB2aWV3cy80OGhcIlxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAgXCJ3ZWVrbHlfcGxhblwiOiBbXG4gICAge1xuICAgICAgXCJ3ZWVrXCI6IDEsXG4gICAgICBcInB1Ymxpc2hfY2FkZW5jZVwiOiAzLFxuICAgICAgXCJpZGVhc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LXcxLWkxLUNcIixcbiAgICAgICAgICBcInN0YXR1c1wiOiBcImRyYWZ0XCIsXG4gICAgICAgICAgXCJ0aXRsZVwiOiBcIkRpc2NvdmVyIHRoZSBQb3dlciBvZiBOYXR1cmFsIEluZ3JlZGllbnRzXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiRGlkIHlvdSBrbm93IHRoZXNlIG5hdHVyYWwgaW5ncmVkaWVudHMgY2FuIHRyYW5zZm9ybSB5b3VyIHNraW4/XCIsXG4gICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkhpZ2hsaWdodCBrZXkgbmF0dXJhbCBpbmdyZWRpZW50cyB1c2VkIGluIEVjb0dsb3cgcHJvZHVjdHMgd2l0aCBhIGZvY3VzIG9uIHRoZWlyIGJlbmVmaXRzLiBVc2UgQUkgYXZhdGFycyB0byBuYXJyYXRlIGFuZCBzdG9jayBmb290YWdlIGZvciB2aXN1YWxzLiBFbXBoYXNpemUgdGhlIGVudmlyb25tZW50YWwgYmVuZWZpdHMgb2YgY2hvb3NpbmcgbmF0dXJhbCBpbmdyZWRpZW50cy5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiSW5zdGFncmFtIFJlZWxzXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIkNcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwiYXZhdGFyX2FuZF92aWRlb1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwia2xpbmdcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkJyaWdodCwgY2xlYW4gdmlzdWFscyB3aXRoIG92ZXJsYXkgdGV4dCBoaWdobGlnaHRpbmcgYmVuZWZpdHMuXCIsXG4gICAgICAgICAgXCJhc3NldHNfaGludHNcIjoge1xuICAgICAgICAgICAgXCJleHRlcm5hbF92aWRlb191cmxcIjogXCJcIixcbiAgICAgICAgICAgIFwidmlkZW9fcHJvbXB0c1wiOiBbXSxcbiAgICAgICAgICAgIFwiYnJvbGxfc3VnZ2VzdGlvbnNcIjogW1wiY2xvc2UtdXBzIG9mIGluZ3JlZGllbnRzXCIsIFwibmF0dXJlIHNjZW5lc1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJyZWFjaFwiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTEwLDAwMCB2aWV3c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rXCIsIFwiVmFsdWVcIiwgXCJDVEFcIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJEaXNjb3ZlciBuYXR1cmFsIGJlYXV0eVwiLFxuICAgICAgICAgIFwicmVwdXJwb3NlX3RvXCI6IFtdLFxuICAgICAgICAgIFwibGFuZ3VhZ2VfdmFyaWFudHNcIjogW11cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktdzEtaTItU1wiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiQmVoaW5kIHRoZSBTY2VuZXM6IEVjb0dsb3cncyBQcm9kdWN0aW9uXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiRXZlciB3b25kZXJlZCBob3cgb3VyIGVjby1mcmllbmRseSBwcm9kdWN0cyBhcmUgbWFkZT9cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiVGFrZSB2aWV3ZXJzIGJlaGluZCB0aGUgc2NlbmVzIG9mIEVjb0dsb3cncyBwcm9kdWN0aW9uIHByb2Nlc3MuIEhpZ2hsaWdodCBzdXN0YWluYWJsZSBwcmFjdGljZXMgYW5kIG5hdHVyYWwgaW5ncmVkaWVudCBzb3VyY2luZy5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiVGlrVG9rXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIlNcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwicmVtaXhcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImV4dGVybmFsXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJVc2UgZW5nYWdpbmcsIGZhc3QtcGFjZWQgZWRpdGluZyB3aXRoIGluZm9ybWF0aXZlIGNhcHRpb25zLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcInByb2R1Y3Rpb24gbGluZVwiLCBcImluZ3JlZGllbnQgc291cmNpbmdcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxMiwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9va1wiLCBcIlZhbHVlXCIsIFwiQ1RBXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiRGlzY292ZXIgb3VyIHByb2Nlc3NcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LXcxLWkzLUNcIixcbiAgICAgICAgICBcInN0YXR1c1wiOiBcImRyYWZ0XCIsXG4gICAgICAgICAgXCJ0aXRsZVwiOiBcIkVjb0dsb3cgSW5ncmVkaWVudCBDaGFsbGVuZ2VcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJDYW4geW91IGd1ZXNzIHRoZSBiZW5lZml0cyBvZiB0aGVzZSBpbmdyZWRpZW50cz9cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiRW5nYWdlIHRoZSBhdWRpZW5jZSB3aXRoIGEgY2hhbGxlbmdlIHRvIGd1ZXNzIHRoZSBiZW5lZml0cyBvZiB2YXJpb3VzIG5hdHVyYWwgaW5ncmVkaWVudHMgdXNlZCBpbiBFY29HbG93IHByb2R1Y3RzLiBFbmNvdXJhZ2UgdXNlciBwYXJ0aWNpcGF0aW9uIHRocm91Z2ggY29tbWVudHMgYW5kIHNoYXJlcy5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiSW5zdGFncmFtIFJlZWxzXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIkNcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwicmVtaXhcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImV4dGVybmFsXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJJbnRlcmFjdGl2ZSBmb3JtYXQgd2l0aCBwb3AtdXAgcXVlc3Rpb25zIGFuZCBhbnN3ZXJzLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcImluZ3JlZGllbnQgY2xvc2UtdXBzXCIsIFwiaW50ZXJhY3RpdmUgZ3JhcGhpY3NcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxNSwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9va1wiLCBcIlZhbHVlXCIsIFwiQ1RBXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiSm9pbiB0aGUgY2hhbGxlbmdlXCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICBcIndlZWtcIjogMixcbiAgICAgIFwicHVibGlzaF9jYWRlbmNlXCI6IDMsXG4gICAgICBcImlkZWFzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktdzItaTEtUlwiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiRWNvLUZyaWVuZGx5IFNraW5jYXJlIFJvdXRpbmVcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJUcmFuc2Zvcm0geW91ciByb3V0aW5lIHdpdGggZWNvLWZyaWVuZGx5IGNob2ljZXMhXCIsXG4gICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlNob3djYXNlIGEgc3RlcC1ieS1zdGVwIGVjby1mcmllbmRseSBza2luY2FyZSByb3V0aW5lIHVzaW5nIEVjb0dsb3cgcHJvZHVjdHMuIFVzZSBhIGNhcm91c2VsIGZvcm1hdCB0byBicmVhayBkb3duIGVhY2ggc3RlcCB3aXRoIHZpc3VhbHMgYW5kIGNhcHRpb25zLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJJbnN0YWdyYW0gUmVlbHNcIixcbiAgICAgICAgICBcInBpbGFyXCI6IFwiUlwiLFxuICAgICAgICAgIFwicmVjb21tZW5kZWRfdGVtcGxhdGVcIjogXCJuYXJyYXRpb25fb3Zlcl83X2ltYWdlc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwibm9uZVwiLFxuICAgICAgICAgIFwidmlzdWFsX25vdGVzXCI6IFwiVXNlIHNvZnQsIG5hdHVyYWwgbGlnaHRpbmcgYW5kIGNsb3NlLXVwcyBvZiBwcm9kdWN0IGFwcGxpY2F0aW9uLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcImFwcGxpY2F0aW9uIHNob3RzXCIsIFwicHJvZHVjdCB0ZXh0dXJlc1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJzYXZlc1wiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTUwMCBzYXZlc1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rXCIsIFwiVmFsdWVcIiwgXCJDVEFcIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJMZWFybiBtb3JlXCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMjMxMS1lY29nbG93LWJlYXV0eS13Mi1pMi1DXCIsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJkcmFmdFwiLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJJbmdyZWRpZW50IFNwb3RsaWdodDogQWxvZSBWZXJhXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiV2h5IEFsb2UgVmVyYSBpcyBhIHNraW5jYXJlIHN1cGVyc3Rhci5cIixcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiSGlnaGxpZ2h0IHRoZSBiZW5lZml0cyBvZiBBbG9lIFZlcmEgaW4gc2tpbmNhcmUsIGZvY3VzaW5nIG9uIGl0cyBzb290aGluZyBhbmQgaHlkcmF0aW5nIHByb3BlcnRpZXMuIFVzZSBBSSBhdmF0YXJzIGZvciBuYXJyYXRpb24gYW5kIHN0b2NrIGZvb3RhZ2UgZm9yIHZpc3VhbHMuXCIsXG4gICAgICAgICAgXCJwbGF0Zm9ybVwiOiBcIlRpa1Rva1wiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJDXCIsXG4gICAgICAgICAgXCJyZWNvbW1lbmRlZF90ZW1wbGF0ZVwiOiBcImF2YXRhcl9hbmRfdmlkZW9cIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImtsaW5nXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJTb290aGluZyB2aXN1YWxzIHdpdGggdGV4dCBvdmVybGF5cy5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJhbG9lIHZlcmEgcGxhbnRzXCIsIFwiYXBwbGljYXRpb24gc2hvdHNcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaU4LDAwMCB2aWV3c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rXCIsIFwiVmFsdWVcIiwgXCJDVEFcIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJEaXNjb3ZlciBBbG9lIFZlcmEgYmVuZWZpdHNcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LXcyLWkzLVNcIixcbiAgICAgICAgICBcInN0YXR1c1wiOiBcImRyYWZ0XCIsXG4gICAgICAgICAgXCJ0aXRsZVwiOiBcIkVjb0dsb3cncyBTdXN0YWluYWJpbGl0eSBQbGVkZ2VcIixcbiAgICAgICAgICBcImhvb2tcIjogXCJPdXIgY29tbWl0bWVudCB0byBhIGdyZWVuZXIgcGxhbmV0LlwiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJFeHBsYWluIEVjb0dsb3cncyBzdXN0YWluYWJpbGl0eSBpbml0aWF0aXZlcyBhbmQgaG93IGN1c3RvbWVycyBjYW4gY29udHJpYnV0ZS4gVXNlIGEgbWl4IG9mIHZpZGVvIGFuZCB0ZXh0IHRvIGNvbnZleSB0aGUgbWVzc2FnZS5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiSW5zdGFncmFtIFJlZWxzXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIlNcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwib25lX3RvX3RocmVlX3ZpZGVvc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwiZXh0ZXJuYWxcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkluY29ycG9yYXRlIGdyYXBoaWNzIGFuZCBzdGF0aXN0aWNzLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcInN1c3RhaW5hYmlsaXR5IGdyYXBoaWNzXCIsIFwiZWNvLWZyaWVuZGx5IHByYWN0aWNlc1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJyZWFjaFwiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTEwLDAwMCB2aWV3c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rXCIsIFwiVmFsdWVcIiwgXCJDVEFcIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJMZWFybiBtb3JlIGFib3V0IG91ciBwbGVkZ2VcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIFwid2Vla1wiOiAzLFxuICAgICAgXCJwdWJsaXNoX2NhZGVuY2VcIjogMyxcbiAgICAgIFwiaWRlYXNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMjMxMS1lY29nbG93LWJlYXV0eS13My1pMS1FXCIsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJkcmFmdFwiLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJTdXN0YWluYWJpbGl0eSBpbiBTa2luY2FyZVwiLFxuICAgICAgICAgIFwiaG9va1wiOiBcIldoeSBzdXN0YWluYWJpbGl0eSBtYXR0ZXJzIGluIHNraW5jYXJlLlwiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJDcmVhdGUgYSB2aWRlbyBleHBsYWluaW5nIHRoZSBpbXBvcnRhbmNlIG9mIHN1c3RhaW5hYmlsaXR5IGluIHNraW5jYXJlIGFuZCBob3cgRWNvR2xvdyBjb250cmlidXRlcyB0byB0aGlzIGNhdXNlLiBVc2UgQUkgYXZhdGFycyBmb3IgbmFycmF0aW9uIGFuZCBzdG9jayBmb290YWdlIGZvciB2aXN1YWxzLlwiLFxuICAgICAgICAgIFwicGxhdGZvcm1cIjogXCJUaWtUb2tcIixcbiAgICAgICAgICBcInBpbGFyXCI6IFwiRVwiLFxuICAgICAgICAgIFwicmVjb21tZW5kZWRfdGVtcGxhdGVcIjogXCJzb2xvX2F2YXRhcnNcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImtsaW5nXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJEeW5hbWljIHRyYW5zaXRpb25zIGFuZCBlbmdhZ2luZyBjYXB0aW9ucy5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJlbnZpcm9ubWVudGFsIGltcGFjdFwiLCBcInByb2R1Y3QgbGlmZWN5Y2xlXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImtwaV9mb2N1c1wiOiBcInJlYWNoXCIsXG4gICAgICAgICAgXCJzdWNjZXNzX2NyaXRlcmlhXCI6IFwi4omlMTUsMDAwIHZpZXdzXCIsXG4gICAgICAgICAgXCJiZWF0c19vdXRsaW5lXCI6IFtcIkhvb2tcIiwgXCJWYWx1ZVwiLCBcIkNUQVwiXSxcbiAgICAgICAgICBcImN0YVwiOiBcIlNob3Agbm93XCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMjMxMS1lY29nbG93LWJlYXV0eS13My1pMi1DXCIsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJkcmFmdFwiLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJJbmdyZWRpZW50IFNwb3RsaWdodDogR3JlZW4gVGVhXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiVW5sb2NrIHRoZSBzZWNyZXRzIG9mIEdyZWVuIFRlYSBmb3IgeW91ciBza2luLlwiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJGb2N1cyBvbiB0aGUgYW50aW94aWRhbnQgcHJvcGVydGllcyBvZiBHcmVlbiBUZWEgYW5kIGl0cyBiZW5lZml0cyBmb3Igc2tpbiBoZWFsdGguIFVzZSBlbmdhZ2luZyB2aXN1YWxzIGFuZCBBSSBhdmF0YXJzIGZvciBuYXJyYXRpb24uXCIsXG4gICAgICAgICAgXCJwbGF0Zm9ybVwiOiBcIkluc3RhZ3JhbSBSZWVsc1wiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJDXCIsXG4gICAgICAgICAgXCJyZWNvbW1lbmRlZF90ZW1wbGF0ZVwiOiBcImF2YXRhcl9hbmRfdmlkZW9cIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImtsaW5nXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJHcmVlbi10aGVtZWQgdmlzdWFscyB3aXRoIGNhbG1pbmcgbXVzaWMuXCIsXG4gICAgICAgICAgXCJhc3NldHNfaGludHNcIjoge1xuICAgICAgICAgICAgXCJleHRlcm5hbF92aWRlb191cmxcIjogXCJcIixcbiAgICAgICAgICAgIFwidmlkZW9fcHJvbXB0c1wiOiBbXSxcbiAgICAgICAgICAgIFwiYnJvbGxfc3VnZ2VzdGlvbnNcIjogW1wiZ3JlZW4gdGVhIGxlYXZlc1wiLCBcImFwcGxpY2F0aW9uIHNob3RzXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImtwaV9mb2N1c1wiOiBcInJlYWNoXCIsXG4gICAgICAgICAgXCJzdWNjZXNzX2NyaXRlcmlhXCI6IFwi4omlOSwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9va1wiLCBcIlZhbHVlXCIsIFwiQ1RBXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiRGlzY292ZXIgR3JlZW4gVGVhIGJlbmVmaXRzXCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjIwMjMxMS1lY29nbG93LWJlYXV0eS13My1pMy1SXCIsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJkcmFmdFwiLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJFY29HbG93IENvbW11bml0eSBIaWdobGlnaHRzXCIsXG4gICAgICAgICAgXCJob29rXCI6IFwiU2VlIGhvdyBvdXIgY29tbXVuaXR5IGVtYnJhY2VzIG5hdHVyYWwgYmVhdXR5LlwiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJGZWF0dXJlIHVzZXItZ2VuZXJhdGVkIGNvbnRlbnQgc2hvd2Nhc2luZyBFY29HbG93IHByb2R1Y3RzIGluIHVzZS4gSGlnaGxpZ2h0IGNvbW11bml0eSBzdG9yaWVzIGFuZCBmZWVkYmFjay5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiSW5zdGFncmFtIFJlZWxzXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIlJcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwib25lX3RvX3RocmVlX3ZpZGVvc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwiZXh0ZXJuYWxcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkluY29ycG9yYXRlIGRpdmVyc2UgdXNlciBjbGlwcyBhbmQgdGVzdGltb25pYWxzLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcInVzZXItZ2VuZXJhdGVkIGNvbnRlbnRcIiwgXCJwcm9kdWN0IHVzYWdlXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImtwaV9mb2N1c1wiOiBcImNvbW1lbnRzXCIsXG4gICAgICAgICAgXCJzdWNjZXNzX2NyaXRlcmlhXCI6IFwi4omlMzAwIGNvbW1lbnRzXCIsXG4gICAgICAgICAgXCJiZWF0c19vdXRsaW5lXCI6IFtcIkhvb2tcIiwgXCJWYWx1ZVwiLCBcIkNUQVwiXSxcbiAgICAgICAgICBcImN0YVwiOiBcIkpvaW4gb3VyIGNvbW11bml0eVwiLFxuICAgICAgICAgIFwicmVwdXJwb3NlX3RvXCI6IFtdLFxuICAgICAgICAgIFwibGFuZ3VhZ2VfdmFyaWFudHNcIjogW11cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgXCJ3ZWVrXCI6IDQsXG4gICAgICBcInB1Ymxpc2hfY2FkZW5jZVwiOiAzLFxuICAgICAgXCJpZGVhc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LXc0LWkxLUFcIixcbiAgICAgICAgICBcInN0YXR1c1wiOiBcImRyYWZ0XCIsXG4gICAgICAgICAgXCJ0aXRsZVwiOiBcIkN1c3RvbWVyIFN0b3JpZXM6IE5hdHVyYWwgQmVhdXR5IFRyYW5zZm9ybWF0aW9uc1wiLFxuICAgICAgICAgIFwiaG9va1wiOiBcIlJlYWwgc3RvcmllcyBvZiB0cmFuc2Zvcm1hdGlvbiB3aXRoIEVjb0dsb3cuXCIsXG4gICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkZlYXR1cmUgY3VzdG9tZXIgdGVzdGltb25pYWxzIGFuZCBzdG9yaWVzIGFib3V0IHRoZWlyIGpvdXJuZXkgd2l0aCBFY29HbG93IHByb2R1Y3RzLiBVc2UgdGV4dCBvdmVybGF5IG9uIHZpZGVvcyB0byBoaWdobGlnaHQga2V5IHBvaW50cy5cIixcbiAgICAgICAgICBcInBsYXRmb3JtXCI6IFwiSW5zdGFncmFtIFJlZWxzXCIsXG4gICAgICAgICAgXCJwaWxhclwiOiBcIkFcIixcbiAgICAgICAgICBcInJlY29tbWVuZGVkX3RlbXBsYXRlXCI6IFwib25lX3RvX3RocmVlX3ZpZGVvc1wiLFxuICAgICAgICAgIFwidmlkZW9fc291cmNlXCI6IFwiZXh0ZXJuYWxcIixcbiAgICAgICAgICBcInZpc3VhbF9ub3Rlc1wiOiBcIkluY29ycG9yYXRlIHVzZXItZ2VuZXJhdGVkIGNvbnRlbnQgd2l0aCBwcm9mZXNzaW9uYWwgZWRpdGluZy5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJiZWZvcmUgYW5kIGFmdGVyXCIsIFwiY3VzdG9tZXIgaW50ZXJ2aWV3c1wiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJrcGlfZm9jdXNcIjogXCJjb21tZW50c1wiLFxuICAgICAgICAgIFwic3VjY2Vzc19jcml0ZXJpYVwiOiBcIuKJpTIwMCBjb21tZW50c1wiLFxuICAgICAgICAgIFwiYmVhdHNfb3V0bGluZVwiOiBbXCJIb29rXCIsIFwiVmFsdWVcIiwgXCJDVEFcIl0sXG4gICAgICAgICAgXCJjdGFcIjogXCJTaGFyZSB5b3VyIG93biBzdG9yeVwiLFxuICAgICAgICAgIFwicmVwdXJwb3NlX3RvXCI6IFtdLFxuICAgICAgICAgIFwibGFuZ3VhZ2VfdmFyaWFudHNcIjogW11cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIyMDIzMTEtZWNvZ2xvdy1iZWF1dHktdzQtaTItQ1wiLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiZHJhZnRcIixcbiAgICAgICAgICBcInRpdGxlXCI6IFwiSW5ncmVkaWVudCBTcG90bGlnaHQ6IENoYW1vbWlsZVwiLFxuICAgICAgICAgIFwiaG9va1wiOiBcIkNhbG0gYW5kIHNvb3RoZSB5b3VyIHNraW4gd2l0aCBDaGFtb21pbGUuXCIsXG4gICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkV4cGxvcmUgdGhlIGNhbG1pbmcgZWZmZWN0cyBvZiBDaGFtb21pbGUgaW4gc2tpbmNhcmUuIFVzZSBBSSBhdmF0YXJzIGZvciBuYXJyYXRpb24gYW5kIHNvb3RoaW5nIHZpc3VhbHMuXCIsXG4gICAgICAgICAgXCJwbGF0Zm9ybVwiOiBcIlRpa1Rva1wiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJDXCIsXG4gICAgICAgICAgXCJyZWNvbW1lbmRlZF90ZW1wbGF0ZVwiOiBcImF2YXRhcl9hbmRfdmlkZW9cIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImtsaW5nXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJTb2Z0IHZpc3VhbHMgd2l0aCBjYWxtaW5nIG11c2ljLlwiLFxuICAgICAgICAgIFwiYXNzZXRzX2hpbnRzXCI6IHtcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfdmlkZW9fdXJsXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZpZGVvX3Byb21wdHNcIjogW10sXG4gICAgICAgICAgICBcImJyb2xsX3N1Z2dlc3Rpb25zXCI6IFtcImNoYW1vbWlsZSBmbG93ZXJzXCIsIFwiYXBwbGljYXRpb24gc2hvdHNcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxMCwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9va1wiLCBcIlZhbHVlXCIsIFwiQ1RBXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiRXhwbG9yZSBDaGFtb21pbGUgYmVuZWZpdHNcIixcbiAgICAgICAgICBcInJlcHVycG9zZV90b1wiOiBbXSxcbiAgICAgICAgICBcImxhbmd1YWdlX3ZhcmlhbnRzXCI6IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMjAyMzExLWVjb2dsb3ctYmVhdXR5LXc0LWkzLVNcIixcbiAgICAgICAgICBcInN0YXR1c1wiOiBcImRyYWZ0XCIsXG4gICAgICAgICAgXCJ0aXRsZVwiOiBcIkVjb0dsb3cncyBJbXBhY3Qgb24gdGhlIFBsYW5ldFwiLFxuICAgICAgICAgIFwiaG9va1wiOiBcIlNlZSBob3cgRWNvR2xvdyBpcyBtYWtpbmcgYSBkaWZmZXJlbmNlLlwiLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJIaWdobGlnaHQgdGhlIGVudmlyb25tZW50YWwgaW1wYWN0IG9mIEVjb0dsb3cncyBzdXN0YWluYWJsZSBwcmFjdGljZXMuIFVzZSBhIG1peCBvZiBncmFwaGljcyBhbmQgdmlkZW8gdG8gdGVsbCB0aGUgc3RvcnkuXCIsXG4gICAgICAgICAgXCJwbGF0Zm9ybVwiOiBcIkluc3RhZ3JhbSBSZWVsc1wiLFxuICAgICAgICAgIFwicGlsYXJcIjogXCJTXCIsXG4gICAgICAgICAgXCJyZWNvbW1lbmRlZF90ZW1wbGF0ZVwiOiBcIm9uZV90b190aHJlZV92aWRlb3NcIixcbiAgICAgICAgICBcInZpZGVvX3NvdXJjZVwiOiBcImV4dGVybmFsXCIsXG4gICAgICAgICAgXCJ2aXN1YWxfbm90ZXNcIjogXCJJbmNvcnBvcmF0ZSBpbXBhY3RmdWwgdmlzdWFscyBhbmQgc3RhdGlzdGljcy5cIixcbiAgICAgICAgICBcImFzc2V0c19oaW50c1wiOiB7XG4gICAgICAgICAgICBcImV4dGVybmFsX3ZpZGVvX3VybFwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ2aWRlb19wcm9tcHRzXCI6IFtdLFxuICAgICAgICAgICAgXCJicm9sbF9zdWdnZXN0aW9uc1wiOiBbXCJpbXBhY3QgZ3JhcGhpY3NcIiwgXCJzdXN0YWluYWJsZSBwcmFjdGljZXNcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwia3BpX2ZvY3VzXCI6IFwicmVhY2hcIixcbiAgICAgICAgICBcInN1Y2Nlc3NfY3JpdGVyaWFcIjogXCLiiaUxMiwwMDAgdmlld3NcIixcbiAgICAgICAgICBcImJlYXRzX291dGxpbmVcIjogW1wiSG9va1wiLCBcIlZhbHVlXCIsIFwiQ1RBXCJdLFxuICAgICAgICAgIFwiY3RhXCI6IFwiTGVhcm4gbW9yZSBhYm91dCBvdXIgaW1wYWN0XCIsXG4gICAgICAgICAgXCJyZXB1cnBvc2VfdG9cIjogW10sXG4gICAgICAgICAgXCJsYW5ndWFnZV92YXJpYW50c1wiOiBbXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdXG59IiwKICAgICAgICAicmVmdXNhbCI6IG51bGwsCiAgICAgICAgImFubm90YXRpb25zIjogW10KICAgICAgfSwKICAgICAgImxvZ3Byb2JzIjogbnVsbCwKICAgICAgImZpbmlzaF9yZWFzb24iOiAic3RvcCIKICAgIH0KICBdLAogICJ1c2FnZSI6IHsKICAgICJwcm9tcHRfdG9rZW5zIjogMjEzOSwKICAgICJjb21wbGV0aW9uX3Rva2VucyI6IDQ4OTgsCiAgICAidG90YWxfdG9rZW5zIjogNzAzNywKICAgICJwcm9tcHRfdG9rZW5zX2RldGFpbHMiOiB7CiAgICAgICJjYWNoZWRfdG9rZW5zIjogMTkyMCwKICAgICAgImF1ZGlvX3Rva2VucyI6IDAKICAgIH0sCiAgICAiY29tcGxldGlvbl90b2tlbnNfZGV0YWlscyI6IHsKICAgICAgInJlYXNvbmluZ190b2tlbnMiOiAwLAogICAgICAiYXVkaW9fdG9rZW5zIjogMCwKICAgICAgImFjY2VwdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjogMCwKICAgICAgInJlamVjdGVkX3ByZWRpY3Rpb25fdG9rZW5zIjogMAogICAgfQogIH0sCiAgInNlcnZpY2VfdGllciI6ICJkZWZhdWx0IiwKICAic3lzdGVtX2ZpbmdlcnByaW50IjogImZwX2ZmMjViMjc4M2EiCn0K
  recorded_at: Sun, 31 Aug 2025 20:36:53 GMT
recorded_with: VCR 6.3.1
